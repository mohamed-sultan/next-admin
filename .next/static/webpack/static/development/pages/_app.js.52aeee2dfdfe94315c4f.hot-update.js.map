{"version":3,"file":"static/webpack/static/development/pages/_app.js.52aeee2dfdfe94315c4f.hot-update.js","sources":["webpack:///./redux/index.js"],"sourcesContent":["import { createStore } from \"redux\";\n\nconst reducer = (state = { foo: \"\" }, action) => {\n  switch (action.type) {\n    case \"FOO\":\n      return { ...state, foo: action.payload };\n    default:\n      return state;\n  }\n};\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nexport const makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAJA;AAMA;AAEA;;;;;;;;;;AAQA;AACA;AACA;;;;A","sourceRoot":""}